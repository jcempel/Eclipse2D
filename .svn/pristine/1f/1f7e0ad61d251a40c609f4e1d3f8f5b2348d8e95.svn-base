using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Eclipse2D.Input
{
    /// <summary>
    /// Represents a mouse state.
    /// </summary>
    public struct MouseState
    {
        /// <summary>
        /// Represents the X-coordinate relative to the game window.
        /// </summary>
        private Int32 m_XCoord;

        /// <summary>
        /// Represents the Y-coordinate relative to the game window.
        /// </summary>
        private Int32 m_YCoord;

        /// <summary>
        /// Represents the button state of the left mouse button.
        /// </summary>
        private MouseButtonState m_LeftButton;

        /// <summary>
        /// Represents the button state of the right mouse button.
        /// </summary>
        private MouseButtonState m_RightButton;

        /// <summary>
        /// Represents the button state of the middle mouse button.
        /// </summary>
        private MouseButtonState m_MiddleButton;

        /// <summary>
        /// Represents the button state of the additional mouse button 1.
        /// </summary>
        private MouseButtonState m_XButton1;

        /// <summary>
        /// Represents the button state of the additional mouse button 2.
        /// </summary>
        private MouseButtonState m_XButton2;

        /// <summary>
        /// Constructs a mouse state with the specified X, Y, wheel delta, and mouse button states.
        /// </summary>
        /// <param name="X">The X-coordinate relative to the game window.</param>
        /// <param name="Y">The Y-coordinate relative to the game window.</param>
        /// <param name="LeftButton">The button state of the left mouse button.</param>
        /// <param name="RightButton">The button state of the right mouse button.</param>
        /// <param name="MiddleButton">The button state of the middle mouse button.</param>
        /// <param name="XButton1">The button state of the additional mouse button 1.</param>
        /// <param name="XButton2">The button state of the additional mouse button 2.</param>
        public MouseState(Int32 X, Int32 Y, MouseButtonState LeftButton, MouseButtonState RightButton, MouseButtonState MiddleButton, MouseButtonState XButton1, MouseButtonState XButton2)
        {
            m_XCoord = X;
            m_YCoord = Y;
            m_LeftButton = LeftButton;
            m_RightButton = RightButton;
            m_MiddleButton = MiddleButton;
            m_XButton1 = XButton1;
            m_XButton2 = XButton2;
        }

        /// <summary>
        /// Gets the X-coordinate relative to the game window.
        /// </summary>
        public Int32 X
        {
            get
            {
                return m_XCoord;
            }

            internal set
            {
                m_XCoord = value;
            }
        }

        /// <summary>
        /// Gets the Y-coordinate relative to the game window.
        /// </summary>
        public Int32 Y
        {
            get
            {
                return m_YCoord;
            }

            internal set
            {
                m_YCoord = value;
            }
        }

        /// <summary>
        /// Gets the button state of the left mouse button.
        /// </summary>
        public MouseButtonState LeftButton
        {
            get
            {
                return m_LeftButton;
            }

            internal set
            {
                m_LeftButton = value;
            }
        }

        /// <summary>
        /// Gets the button state of the right mouse button.
        /// </summary>
        public MouseButtonState RightButton
        {
            get
            {
                return m_RightButton;
            }

            internal set
            {
                m_RightButton = value;
            }
        }

        /// <summary>
        /// Gets the button state of the middle mouse button.
        /// </summary>
        public MouseButtonState MiddleButton
        {
            get
            {
                return m_MiddleButton;
            }

            internal set
            {
                m_MiddleButton = value;
            }
        }

        /// <summary>
        /// Gets the button state of the additional mouse button 1.
        /// </summary>
        public MouseButtonState XButton1
        {
            get
            {
                return m_XButton1;
            }

            internal set
            {
                m_XButton1 = value;
            }
        }

        /// <summary>
        /// Gets the button state of the additional mouse button 2.
        /// </summary>
        public MouseButtonState XButton2
        {
            get
            {
                return m_XButton2;
            }

            internal set
            {
                m_XButton2 = value;
            }
        }
    }
}
