using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using SharpDX;
using Eclipse2D;
using Eclipse2D.Graphics;
using Eclipse2D.Input;
using Eclipse2D.GameClient.GameScreens;

namespace Eclipse2D.GameClient
{
    /// <summary>
    /// Represents the Eclipse2D game client.
    /// </summary>
    class EclipseGame : Game
    {
        /// <summary>
        /// Manages a collection of game screens both active and in-active.
        /// </summary>
        GameScreenManager m_ScreenManager;

        /// <summary>
        /// Initializes the EclipseGame class with the specified title, width, height, and network option.
        /// </summary>
        /// <param name="Title">The title of the game window.</param>
        /// <param name="Width">The width of the client-area of the game window.</param>
        /// <param name="Height">The height of the client-area of the game window.</param>
        /// <param name="EnableNetworking">Whether or not the game is online or offline.</param>
        public EclipseGame(String Title, Int32 Width, Int32 Height, Boolean EnableNetworking)
            : base(Title, Width, Height, EnableNetworking)
        {

        }

        /// <summary>
        /// Initializes the game.
        /// </summary>
        public override void Initialize()
        {
            // Initializes the game screen manager.
            m_ScreenManager = new GameScreenManager(this);

            // Add our title screen to the manager.
            m_ScreenManager.AddGameScreen("TitleScreen", new TitleScreen(this));

            // Set the title screen as our default game screen.
            m_ScreenManager.SetGameScreen("TitleScreen");
        }

        /// <summary>
        /// Updates the game.
        /// </summary>
        /// <param name="DeltaTime">The delta-time between frames.</param>
        public override void Update(Double DeltaTime)
        {
            m_ScreenManager.Update(DeltaTime);
        }

        /// <summary>
        /// Draws the game.
        /// </summary>
        public override void Draw()
        {
            m_ScreenManager.Draw();
        }

        /// <summary>
        /// Un-initializes the game.
        /// </summary>
        public override void Uninitialize()
        {
            m_ScreenManager.Dispose();
        }
    }
}
